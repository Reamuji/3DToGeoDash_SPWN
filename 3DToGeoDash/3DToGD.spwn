extract obj_props
extract $

//.obj file to read
model = readfile("Human.obj")

//model placing offset
xOffset = 210
yOffset = 160

// for resizing the model generated
rescale = 1/2

// add cool glow lol
glowMode = true

// xyz pos of the 3D model vertices
// vertices [index][0 = x |1 = y|2 = z]
let vertices = []

blockSize  = 30

//function to read vertices position
readobj = (file) {
    let lines = file.split("\n")
    for i in lines {
        //the i!="" is for bugfixing
        if i!="" && i.starts_with("v ") {
            let part = i.split(" ")
            let coor = []
            for j in part{
                if j != "v"{
                    k = j as @number
                    coor.push(k)
                }
            }
            vertices.push(coor)
        }
    }
}

//3 obj that govern how the model rotate in 3 dimension
//ill call em triaxis
xFollow = 1g
yFollow = 2g
zFollow = 3g
    //create triaxis obj
    add(
        obj{
            OBJ_ID: 1764,    
            X: 60,
            Y: 30,
            GROUPS: xFollow
        }
    )
    add(
        obj{
            OBJ_ID: 1764,    
            X: 30,
            Y: 60,
            GROUPS: yFollow
        }
    )
    add(
        obj{
            OBJ_ID: 1764,    
            X: 30,
            Y: 30,
            GROUPS: zFollow
        }
    )


//i made a group to move the model following player x, but it cause an issue
followCam = ?g

readobj(model)

verticesColor = ?c

if glowMode{
    verticesColor.set(0, 35, 70, 0, 1, true)
    BG.set(0,0,0)
}

for i in vertices{
    newGroup = ?g
    daGroup = [followCam, newGroup]

    //for convenience
    xNum = i[0] * rescale
    yNum = i[1] * rescale
    zNum = i[2] * rescale

    //create a ball
    add(
        obj{
            OBJ_ID: 1764,    
            X: xNum * blockSize + xOffset,
            Y: yNum * blockSize + yOffset,
            COLOR_2: verticesColor,
            GROUPS: daGroup
            //GROUPS: newGroup
        }
    )

    if glowMode{
        add(
            obj{
                OBJ_ID: 1887,    
                X: xNum * blockSize + xOffset,
                Y: yNum * blockSize + yOffset,
                COLOR_2: verticesColor,
                GROUPS: daGroup
                //GROUPS: newGroup
            }
        )

        add(
            obj{
                OBJ_ID: 1888,    
                X: xNum * blockSize + xOffset,
                Y: yNum * blockSize + yOffset,
                COLOR_2: verticesColor,
                GROUPS: daGroup,
                //GROUPS: newGroup,
                SCALING: 2
            }
        )
    }
    //3 follow. following each triaxis
    newGroup.follow(xFollow,xNum,xNum)
    newGroup.follow(yFollow,yNum,yNum)
    newGroup.follow(zFollow,zNum,zNum)
}

followCam.lock_to_player(lock_y = false, lock_x = true)

//the last thing to do is to think of some mechanism to move the triaxis


//script for rotating test
-> while_loop(() => true, () {
    xFollow.move(x = -20, y = 0, duration = 1, easing = SINE_IN_OUT)
    xFollow.move(x = 20, y = 0, duration = 1, easing = SINE_IN_OUT)
})

zFollow.move(x = -10,y = 0, duration = 0.5, easing = SINE_OUT)
-> while_loop(() => true, () {
    zFollow.move(x = 20,y = 0, duration = 1, easing = SINE_IN_OUT)
    zFollow.move(x = -20,y = 0, duration = 1, easing = SINE_IN_OUT)
})
